    S : MainBlocks :

		MainBlocks : MainBlock MainBlocks | MainBlock :

			MainBlock : TypeDeclaration | FunctionDeclaration | VarDeclaration | lowlevel :
			
				TypeDeclaration : StructDeclaration | ClassDeclaration :

					StructDeclaration : struct type_id { VarDeclarations } :

					ClassDeclaration : ClassModifiers class type_id { MemberDeclarations } :

						ClassModifiers : AccessModifier NonAccessModifiers | AccessModifier :

							AccessModifier : public | private | protected :

							NonAccessModifiers : final | abstract :
							
						MemberDeclarations : AttributeDeclaration MemberDeclarations | MethodDeclaration MemberDeclarations | AttributeDeclaration | MethodDeclaration : 

							AttributeDeclaration : AccessModifier AtributeModifiers VarDeclaration | AccessModifier VarDeclaration :

								AtributeModifiers : property | static | property static :

							MethodDeclaration : AccessModifier MethodModifiers FunctionDeclaration | ~ FunctionDeclaration | AccessModifier FunctionDeclaration :

								MethodModifiers : static | final | abstract | static abstract | static final :
				
				FunctionDeclaration : id ( ParamsList ) { Block } :
				
					ParamsList : Type id , ParamsList | Type id :

				Block : Statement Block | Statement :
					
					Statement : SimpleStatement | ComplexStatement | break ; | lowlevel :
				
						SimpleStatement : VarDeclaration | { Block } | Expr ; :
						
						ComplexStatement : LoopStatement | ConditionalStatement :
					
							LoopStatement : for ( VarDeclaration Expr ; Expr ) SimpleStatement | for ( Expr ; Expr ; Expr ) SimpleStatement | while ( Expr ) SimpleStatement | do SimpleStatement while ( Expr ) ; :

							ConditionalStatement : if ( Expr ) SimpleStatement | if ( Expr ) SimpleStatement else SimpleStatement | switch ( Expr ) { SwitchBody } :
					
								SwitchBody : case Expr : Block SwitchBody | default : Block | case Expr : Block :
					
					VarDeclarations : VarDeclaration VarDeclarations | VarDeclaration :

						VarDeclaration :  Type id = Expr ; | Type id ; | const Type id = Expr ; | const Type id ; :

					FunctionCall : id ( ValueList ) ; :

						ValueList : Expr , ValueList | Expr :

					Type : type_id | char | float | byte | bool | double | long double | unsigned IntType | IntType :
					
						IntType : int | short | short int | long | long int :

					Expr : E1 :

						E1 : E1 = E2 | E2 :
						E2 : E2 ^= E3 | E3 :
						E3 : E3 *= E4 | E4 :
						E4 : E4 /= E5 | E5 :
						E5 : E5 %= E6 | E6 :
						E6 : E6 += E7 | E7 :
						E7 : E7 -= E8 | E8 :
						E8 : E8 >>= E9 | E9 :
						E9 : E9 <<= E10 | E10 :
						E10 : E10 &= E11 | E11 :
						E11 : E11 |= E12 | E12 :
						E12 : E12 >|<= E13 | E13 :
						E13 : E13 || E14 | E14 :
						E14 : E14 && E15 | E15 :
						E15 : E15 \| E16 | E16 :
						E16 : E16 >|< E17 | E17 :
						E17 : E17 & E18 | E18 :
						E18 : E18 == E19 | E19 :
						E19 : E19 != E20 | E20 :
						E20 : E20 < E21 | E21 :
						E21 : E21 > E22 | E22 :
						E22 : E22 <= E23 | E23 :
						E23 : E23 >= E24 | E24 :
						E24 : E24 << E25 | E25 :
						E25 : E25 >> E26 | E26 :
						E26 : E26 + E27 | E27 :
						E27 : E27 - E28 | E28 :
						E28 : E28 % E29 | E29 :
						E29 : E29 / E30 | E30 :
						E30 : E30 * E31 | E31 :
						E31 : E31 ^ E32 | E32 :
						E32 : ( type_id ) E33 | ++ E33 | -- E33 | ! E33 | * E33 | & E33 | E33 :
						E33 : E34 ++ | E34 -- | E34 :
						E34 : ( E1 ) | E1 [ E1 ] | ExprFinal :

						ExprFinal : E1 -> id | E1 . id | E1 -> FunctionCall | E1 . FunctionCall | type_id . FunctionCall | type_id . id | id | Value | FunctionCall | Subset | { ValueList } :
								
							Subset : Type id in id where Expr | Type id in id where Expr select Expr | id in id where Expr | id in id where Expr select Expr :
								
							Value : int_value | long_value | short_value | double_value | float_value | long_double_value | char_value | string_value :